@model IEnumerable<Store>
@{
	ViewData["Title"] = "Stores";

}
<h1 class="text-center">Stores</h1>

@*search*@
<label for="search">Search:</label>
<input type="text" class="form-control" id="search">
@*Table*@
<div id="table">
	@Html.Partial("Sett", Model)
</div>
<button class="btn btn-primary" id="add">Add New Store</button>


<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery/dist/jquery-ui.js"></script>


<script>

	var addComponent = `<tr id="addComponent">
							<td><input type="text" class="form-control" placeholder="Name" id="name" /></td>
							<td><input type="text" class="form-control" placeholder="Address" id="address"/></td>
							<td><button class="btn btn-outline-info rounded-pill" onclick="save()" id="save">Save</button></td>
									<td><button class="btn btn-link" id="cancle" onclick="cancel()">Cancel</button></td>
							<td></td>
							</tr>`;
	var editComponent = `<tr id="editComponent">
								<td><input type="text" class="form-control" placeholder="Name" id="name" /></td>
								<td><input type="text" class="form-control" placeholder="Address" id="address"/></td>
								<td><button class="btn btn-outline-info rounded-pill" onclick="edit()" id="save">Save</button></td>
										<td><button class="btn btn-link" id="cancle" onclick="cancelEdit()">Cancel</button></td>
								<td><input type="hidden" class="form-control" placeholder="" id="id"/></td>
								</tr>`;

	//update table
	function Update() {
		$.ajax({
			type: "GET",
			url: "Store/GetData",  // Replace "Controller" with the name of your controller
			success: function (data) {
				console.log(data);
				// Update the table with the new data
				$("#table").html(data);

			},
			error: function () {
				// Handle the error if the request fails
				alert("Failed to get data from the server.");
			}
		});
	}
	//add new store button
	$("#add").on("click", function () {
		$("#add").hide(500);
		$('button').attr('disabled', true);
		$('#search').val('');

		$("table").append(addComponent);


	})
	//cancel
	function cancel() {
		$("#add").show(500);
		$("#addComponent").remove();
		$('button').attr('disabled', false);
	}
	//save new store
	function save() {
		//validation
		if ($("#name").val().trim() == '' || $("#address").val().trim() == '') {
			alert("make sure to fill form");
		}
		else {
			//ajax
			$.ajax({
				url: "/Store/Save", // URL to request
				type: "POST", // HTTP method to use for the request
				data: JSON.stringify({ // Data to send with the request
					Name: $("#name").val(),
					Address: $("#address").val()
				}),
				dataType: "json", // Data type expected in the response
				contentType: 'application/json',
				success: function (response) {
					// Callback function to handle a successful response
					console.log(response);
					Update();
					$("#add").show(500);
					$("#newrow").remove();
					$('button').attr('disabled', false);

				},
				error: function (jqXHR, textStatus, errorThrown) {
					// Callback function to handle an error response
					console.log(textStatus + ": " + errorThrown);
				}
			})
		}
	}
	//Delete record
	//$(".deleteBtn").on("click",function(){
	$(document).on('click', '.deleteBtn', function () {
		var myid = $(this).data("id");
		var element = $(this);
		$.ajax({
			url: "Store/Delete/data", // URL to request
			type: "Get", // HTTP method to use for the request
			data: { // Data to send with the request
				id: myid
			},
			dataType: "json", // Data type expected in the response
			success: function (response) {
				// Callback function to handle a successful response
				//console.log(response);

				//console.log(element);
				//element.closest('tr').remove();
				Update();

			},
			error: function (jqXHR, textStatus, errorThrown) {
				// Callback function to handle an error response
				console.log(textStatus + ": " + errorThrown);
			}
		});

	})

	//edit record
	$(document).on('click', '.editBtn', function () {
		var id = $(this).data("id");
		var name = $(this).closest('tr').find('td:nth-child(1)').text();
		var address = $(this).closest('tr').find('td:nth-child(2)').text();
		//console.log(name+" "+ address)
		$('button').attr('disabled', true);
		$(this).closest('tr').after(editComponent)
		$('#name').val(name);
		$('#address').val(address);
		$('#id').val(id);
		//$('.editBtn').attr('disabled', true);


	})
	//edit cancle btn
	function cancelEdit() {
		$('button').attr('disabled', false);
		$("#editComponent").remove();
	}
	//save editted data
	function edit() {
		//validation
		if ($("#name").val().trim() == '' || $("#address").val().trim() == '') {
			alert("make sure to fill form");
		}
		else {
			$.ajax({
				url: "/Store/Edit", // URL to request
				type: "POST", // HTTP method to use for the request
				data: JSON.stringify({ // Data to send with the request
					Id: $("#id").val(),
					Name: $("#name").val(),
					Address: $("#address").val()
				}),
				dataType: "json", // Data type expected in the response
				contentType: 'application/json',
				success: function (response) {
					// Callback function to handle a successful response
					console.log(response);
					Update();
					$('button').attr('disabled', false);
					$("#editComponent").remove();
				},
				error: function (jqXHR, textStatus, errorThrown) {
					// Callback function to handle an error response
					console.log(textStatus + ": " + errorThrown);
				}
			})
		}

	}

	//information of store
	$(document).on('click', '.info', function () {
		var id = $(this).data("id");
		//clear module
		$("#list").text('');
		$("#exampleModalLabel").text('');
		$.ajax({
			url: "/Store/Info/" + id, // URL to request
			type: "GET", // HTTP method to use for the request
			dataType: "json", // Data type expected in the response

			success: function (response) {
				// Callback function to handle a successful response
				var storename = response.storeName;
				$("#exampleModalLabel").append(storename)
				if (response.about.length == 0) {

					$("#list").append("empty store")
				}
				else {

					for (let i = 0; i < response.about.length; i++) {
						var itemName = response.about[i].itemName;
						var quant = response.about[i].quantity;
						var information = `<li><span>${itemName}</span> : <span>${quant} pieces</span></li>`
						$("#list").append(information)
					}
				}


			},
			error: function (jqXHR, textStatus, errorThrown) {
				// Callback function to handle an error response
				console.log(textStatus + ": " + errorThrown);
			}
		});

	})

	//autocomplate in search
	$("#search").autocomplete({
		source: '@Url.Action("AutoComplate")',
		minLength: 1,
		select: function (event, ui) {
			// Get the selected value and do something with it
			var selectedValue = ui.item.value;
			$.ajax({
				url: "/Store/Search/data", // URL to request
				type: "GET", // HTTP method to use for the request
				data: { // Data to send with the request
					text: selectedValue
				},
				success: function (response) {
					// Callback function to handle a successful response
					$("#table").html(response);
				},
				error: function (jqXHR, textStatus, errorThrown) {
					// Callback function to handle an error response
					console.log(textStatus + ": " + errorThrown);
				}
			})
		},
	});
	//clear search
	$("#search").on('keyup', function () {
		if ($("#search").val().trim() === "") {
			Update();
		}
	});
</script>